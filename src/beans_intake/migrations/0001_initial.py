# Generated by Django 3.2 on 2021-04-13 20:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsignature.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DryingBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dry_coffee_weight', models.IntegerField()),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('batch', models.CharField(blank=True, max_length=60, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('dob', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Intake',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supervisor_name', models.CharField(max_length=60)),
                ('is_floated', models.BooleanField(blank=True, default=False, null=True)),
                ('total_box_count', models.IntegerField()),
                ('passed_float_box_count', models.IntegerField(blank=True, default=0, null=True)),
                ('supervisor_signature', jsignature.fields.JSignatureField(blank=True, null=True)),
                ('representative_name', models.CharField(blank=True, max_length=60, null=True)),
                ('representative_signature', jsignature.fields.JSignatureField(blank=True, null=True)),
                ('is_external', models.BooleanField(default=False)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_bags', models.IntegerField(blank=True, default=0, null=True)),
                ('partial_bag_weight', models.IntegerField(blank=True, default=0, null=True)),
                ('moisture_content', models.FloatField(blank=True, default=0, null=True)),
                ('marker_placed', models.BooleanField(default=True)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('intake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beans_intake.intake')),
                ('supervisor_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beans_intake.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('status_description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('address', models.TextField(max_length=120, null=True)),
                ('phone', models.CharField(max_length=60, null=True)),
                ('email', models.EmailField(max_length=60, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lot_location', models.CharField(max_length=60, null=True)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Refloat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refloat_weight', models.IntegerField()),
                ('floated', models.BooleanField(default=False)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('intake', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beans_intake.intake')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proof_file', models.FileField(blank=True, null=True, upload_to='inventory-files')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beans_intake.inventory')),
            ],
        ),
        migrations.CreateModel(
            name='IntakeNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(max_length=500)),
                ('intake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beans_intake.intake')),
            ],
        ),
        migrations.CreateModel(
            name='IntakeFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proof_file', models.FileField(upload_to='intake-files')),
                ('intake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beans_intake.intake')),
            ],
        ),
        migrations.CreateModel(
            name='IntakeDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marker_placed', models.BooleanField(default=True)),
                ('is_active_status', models.BooleanField(default=True)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('intake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beans_intake.intake')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beans_intake.status')),
            ],
        ),
        migrations.AddField(
            model_name='intake',
            name='lot_location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beans_intake.location'),
        ),
        migrations.AddField(
            model_name='intake',
            name='supplier_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='beans_intake.supplier'),
        ),
        migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_intake_id_seq RESTART WITH 1000000;'
        )
        ,migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_location_id_seq RESTART WITH 4000000;'
        )
       
        ,migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_inventory_id_seq RESTART WITH 2000000;'
        ),
        migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_status_id_seq RESTART WITH 3000000;'
        )
        ,migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_employee_id_seq RESTART WITH 9000000;'
        )
        ,migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_dryingbatch_id_seq RESTART WITH 6000000;'
        ),migrations.RunSQL(
           'ALTER SEQUENCE beans_intake_supplier_id_seq RESTART WITH 7000000;'
        )
    ]
